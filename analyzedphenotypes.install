<?php
/**
 * Implements hook_install().
 */

/**
 * Implements hook_enable().
 */
function analyzedphenotypes_enable() {

  // Add a materialized view to calculate the mean for quantitative data.
  $query = "
      SELECT
        o.genus as organism_genus,
        trait.cvterm_id as trait_id,
        trait.name as trait_name,
        proj.project_id as project_id,
        proj.name as project_name,
        loc.value as location,
        yr.value as year,
        s.stock_id as germplasm_id,
        s.name as germplasm_name,
        avg( CAST(p.value as FLOAT) ) as mean
      FROM {phenotype} p
      LEFT JOIN {cvterm} trait ON trait.cvterm_id=p.attr_id
      LEFT JOIN {project} proj USING(project_id)
      LEFT JOIN {stock} s USING(stock_id)
      LEFT JOIN {organism} o ON o.organism_id=s.organism_id
      LEFT JOIN {phenotypeprop} loc ON loc.phenotype_id=p.phenotype_id AND loc.type_id IN (SELECT cvterm_id FROM chado.cvterm WHERE name='Location')
      LEFT JOIN {phenotypeprop} yr ON yr.phenotype_id=p.phenotype_id AND yr.type_id IN (SELECT cvterm_id FROM chado.cvterm WHERE name='Year')
      GROUP BY trait.cvterm_id, trait.name, proj.project_id, proj.name, loc.value, yr.value, s.stock_id, s.name, o.genus";
  $schema = array(
    'description' => 'Caches phenotypic data for easier retrieval of means. Data replicates are combined.',
    'table' => 'mview_phenotype',
    'fields' => array (
      'organism_genus' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'trait_id' => array (
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'trait_name' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'experiment_id' => array (
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'experiment_name' => array (
        'type' => 'text',
        'not null' => TRUE,
      ),
      'location' => array (
        'type' => 'text',
        'not null' => TRUE,
      ),
      'year' => array (
        'type' => 'text',
        'not null' => TRUE,
      ),
      'stock_id' => array (
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'stock_name' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'mean' => array(
        'type' => 'float',
      ),
    ),
    'indexes' => array(),
  );
  tripal_add_mview($schema['table'], 'analyzedphenotypes', $schema, $query, $schema['description']);

}

function analyzedphenotypes_schema() {
  //
  $schema['ap_phenotypes'] = array(
    'description' => t('Table for analyzed phenotype.'),
    'fields' => array(
      'phenotype_id' => array(
        'description' => t('A unique id number. Primary key.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uniquename' => array(
        'description' => t('Unique name.'),
        'type' => 'text',
        'not null' => TRUE,
      ),
      'observable_id' => array(
        'description' => t('The entity (anatomy part, biological process).'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'attr_id' => array(
        'description' => t('Primary key for the trait.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'value' => array(
        'description' => t('The measured value.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'cvalue_id' => array(
        'description' => t('Link to the scale value recorded.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'assay_id' => array(
        'description' => t('The evidence type.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'project_id' => array(
        'description' => t('Link to the experiment.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'stock_id' => array(
        'description' => t('Link to the stock the trait was observed/measured on.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('phenotype_id'),
  );

  //
  $schema['ap_phenotypeprop'] = array(
    'description' => t('Analyzed phenotype properties'),
    'fields' => array(
      'phenotypeprop_id' => array(
        'description' => t('A unique id number. Priimary key.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'phenotype_id' => array(
        'description' => t('Foreign key: ap_phenotypes.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type_id' => array(
        'description' => t('Property type.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'value' => array(
        'description' => t('The free-text value of the property.'),
        'type' => 'text',
        'not null' => TRUE,
      ),
      'cvalue_id' => array(
        'description' => t('Links to cvterm if property is controlled.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rank' => array(
        'description' => t('Property value ordering'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('phenotypeprop_id'),
    'foreign keys' => array(
      'ap_phenotypes' => array(
        'table' => 'ap_phenotypes',
        'columns' => array('phenotype_id' => 'phenotype_id')
      ),
    ),
  );


  return $schema;
}
