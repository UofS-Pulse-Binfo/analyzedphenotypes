<?php

/**
 * Implements hook_install().
 */

// Make the API available during install.

// AP API.
module_load_include('inc', 'analyzedphenotypes', 'api/analyzedphenotypes.api');
// Default Ontology Terms API.
module_load_include('inc', 'analyzedphenotypes', 'api/analyzedphenotypes.materializedview.api');

/**
 * Implements hook_enable().
 */
function analyzedphenotypes_enable() {
  // Check we have the phenotype tables we expect to have.
  if (!db_table_exists('chado.phenotype')) {
    tripal_report_error('analyzedpenotypes', TRIPAL_CRITICAL,
      'Analyzed Phenotypes requires the chado.phenotype table to exists. Make sure you have installed chado v1.2+');
    return FALSE;
  }
  if (!db_table_exists('chado.phenotypeprop')) {
    tripal_report_error('analyzedpenotypes', TRIPAL_CRITICAL,
      'Analyzed Phenotypes requires the chado.phenotypeprop table to exists. Make sure you have installed chado v1.2+');
    return FALSE;
  }

  // Add a materialized view to calculate the mean for quantitative data.
  $mviewquery = ap_construct_mviewquery();
  $mviewschema = ap_construct_mviewschema();
  tripal_add_mview($mviewschema['table'], 'analyzedphenotypes', $mviewschema, $mviewquery, $mviewschema['description'], FALSE);

  // Add a summary materialized view.
  $query = "
    (SELECT organism_genus, 1 as num, 1 as count
       FROM chado.mview_phenotype
       GROUP BY organism_genus)
    UNION
      (SELECT organism_genus, 2 as num, count(1)
       FROM (SELECT DISTINCT organism_genus, trait_id FROM chado.mview_phenotype) d2
       GROUP BY organism_genus)
    UNION
      (SELECT organism_genus, 3 as num, count(1)
       FROM (SELECT DISTINCT organism_genus, experiment_id FROM chado.mview_phenotype) d3
       GROUP BY organism_genus)
    UNION
      (SELECT organism_genus, 4 as num, count(1)
       FROM (SELECT DISTINCT organism_genus, stock_id FROM chado.mview_phenotype) d4
       GROUP BY organism_genus)
    UNION
      (SELECT organism_genus, 5 as num, count(1)
       FROM chado.mview_phenotype
       GROUP BY organism_genus)
  ";

  $schema = array (
    'table' => 'mview_phenotype_summary',
    'description' => 'A summary of phenotypes.',
    'fields' => array (
      'organism_genus' => array (
        'type' => 'text',
        'not null' => true,
      ),
      'column_num' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
      'count' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
    ),
  );

  tripal_add_mview($schema['table'], 'analyzedphenotypes', $schema, $query, $schema['description'], FALSE);

  // Extend chado phenotype/phenotypeprop.
  $arr_fields = array(
    'project_id' => array('table' => 'phenotype',     'ref' => 'project', 'ref_id' => 'project_id'),
    'stock_id' =>   array('table' => 'phenotype',     'ref' => 'stock',   'ref_id' => 'stock_id'),
    'cvalue_id' =>  array('table' => 'phenotypeprop', 'ref' => 'cvterm',  'ref_id' => 'cvterm_id'),
  );
  foreach($arr_fields as $field => $items) {
    $exists = db_field_exists('chado.' . $items['table'], $field);

    if (!$exists) {
      $sql = sprintf('ALTER TABLE {%s} ADD COLUMN %s integer REFERENCES {%s} (%s)',
      $items['table'], $field, $items['ref'], $items['ref_id']);

      chado_query($sql);
    }
  }

  // Helpfull guide the admin.
  drupal_set_message(t(
    'Analyzed Phenotypes needs to be configured <a href="@url">here</a> in order to be specific to your system.',
    array('@url' => url('admin/tripal/extension/analyzedphenotypes/settings'))),
    'warning');


  // Initialize Variables:
  // Load default ontology terms for method, location, replicate, collector, genus, related and year
  // in AP configuration page.
  $default_ontology = analyzedphenotypes_defaultontologyload();

  // System variable for all controlled vocabulary terms.
  $system_vars = analyzedphenotypes_systemvariables('terms');

  // Set default.
  foreach($system_vars as $v => $var) {
    // Set the variable to default ontology term.
    // base terms: location, replicate, year ...
    $v = trim(str_replace('ap_', '', $v));

    variable_set($var, $default_ontology[$v]);
  }

  // Other system variables.
  // Genus - cv, db and ontology.
  unset($system_vars);
  $system_vars = analyzedphenotypes_systemvariables('cvdbon');

  foreach($system_vars as $v => $var) {
    foreach($var as $h) {
      variable_set($h, 'not set');
    }
  }

  // Allow new traits.
  unset($system_vars);
  $system_vars = analyzedphenotypes_systemvariables('options');
  foreach($system_vars as $v => $var) {
    variable_set($var, 1);
  }
}


/**
 * Implements hook_uninstall().
 */
function analyzedphenotypes_uninstall() {
  $vars = analyzedphenotypes_systemvariables();

  foreach($vars as $i => $v) {
    if (is_array($v)) {
      foreach($v as $j => $k) {
        variable_del($k);
      }
    }
    else {
      variable_del($v);
    }
  }

  foreach(array('mview_phenotype', 'mview_phenotype_summary') as $mview) {
    $mview_id = tripal_get_mview_id($mview);

    if (isset($mview_id) && $mview_id > 0) {
      tripal_delete_mview($mview_id);
    }
  }
}
